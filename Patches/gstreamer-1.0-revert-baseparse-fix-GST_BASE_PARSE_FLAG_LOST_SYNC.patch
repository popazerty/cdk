--- a/libs/gst/base/gstbaseparse.c
+++ b/libs/gst/base/gstbaseparse.c
@@ -773,8 +773,11 @@
 }
 
 static inline void
-gst_base_parse_update_flags (GstBaseParse * parse)
+gst_base_parse_frame_update (GstBaseParse * parse, GstBaseParseFrame * frame,
+    GstBuffer * buf)
 {
+  gst_buffer_replace (&frame->buffer, buf);
+
   parse->flags = 0;
 
   /* set flags one by one for clarity */
@@ -786,23 +789,6 @@
     parse->flags |= GST_BASE_PARSE_FLAG_LOST_SYNC;
 }
 
-static inline void
-gst_base_parse_update_frame (GstBaseParse * parse, GstBaseParseFrame * frame)
-{
-  if (G_UNLIKELY (parse->priv->discont)) {
-    GST_DEBUG_OBJECT (parse, "marking DISCONT");
-    GST_BUFFER_FLAG_SET (frame->buffer, GST_BUFFER_FLAG_DISCONT);
-  } else {
-    GST_BUFFER_FLAG_UNSET (frame->buffer, GST_BUFFER_FLAG_DISCONT);
-  }
-
-  if (parse->priv->prev_offset != parse->priv->offset || parse->priv->new_frame) {
-    GST_LOG_OBJECT (parse, "marking as new frame");
-    frame->flags |= GST_BASE_PARSE_FRAME_FLAG_NEW_FRAME;
-  }
-
-  frame->offset = parse->priv->prev_offset = parse->priv->offset;
-}
 
 static void
 gst_base_parse_reset (GstBaseParse * parse)
@@ -2114,17 +2100,27 @@
       GST_BUFFER_OFFSET (buffer), GST_BUFFER_OFFSET (buffer),
       gst_buffer_get_size (buffer));
 
-  GST_BUFFER_OFFSET (buffer) = parse->priv->offset;
+  if (parse->priv->discont) {
+    GST_DEBUG_OBJECT (parse, "marking DISCONT");
+    GST_BUFFER_FLAG_SET (buffer, GST_BUFFER_FLAG_DISCONT);
+    parse->priv->discont = FALSE;
+  }
 
-  gst_base_parse_update_flags (parse);
+  GST_BUFFER_OFFSET (buffer) = parse->priv->offset;
 
   frame = gst_base_parse_frame_new (buffer, 0, 0);
+
+  /* also ensure to update state flags */
+  gst_base_parse_frame_update (parse, frame, buffer);
   gst_buffer_unref (buffer);
-  gst_base_parse_update_frame (parse, frame);
 
-  /* clear flags for next frame */
-  parse->priv->discont = FALSE;
-  parse->priv->new_frame = FALSE;
+  if (parse->priv->prev_offset != parse->priv->offset || parse->priv->new_frame) {
+    GST_LOG_OBJECT (parse, "marking as new frame");
+    parse->priv->new_frame = FALSE;
+    frame->flags |= GST_BASE_PARSE_FRAME_FLAG_NEW_FRAME;
+  }
+
+  frame->offset = parse->priv->prev_offset = parse->priv->offset;
 
   /* use default handler to provide initial (upstream) metadata */
   gst_base_parse_parse_frame (parse, frame);

