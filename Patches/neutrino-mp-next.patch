--- neutrino-mp-next.org/acinclude.m4
+++ neutrino-mp-next/acinclude.m4
@@ -464,6 +464,10 @@
 			BOXTYPE="duckbox"
 			BOXMODEL="$withval"
 			;;
+		hs7*)
+			BOXTYPE="duckbox"
+			BOXMODEL="$withval"
+			;;
 		cuberevo*)
 			BOXTYPE="duckbox"
 			BOXMODEL="$withval"
@@ -480,7 +484,7 @@
 	[  --with-boxmodel         valid for coolstream: nevis, apollo
                           valid for dreambox: dm500, dm500plus, dm600pvr, dm56x0, dm7000, dm7020, dm7025
                           valid for ipbox: ip200, ip250, ip350, ip400
-                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, cuberevo, cuberevo_mini2, cuberevo_mini, cuberevo_250hd, cuberevo_2000hd, tf7700],
+                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7420, hs7810a, hs7119, hs7429, hs7819, cuberevo, cuberevo_mini2, cuberevo_mini, cuberevo_250hd, cuberevo_2000hd, tf7700],
 	[case "${withval}" in
 		nevis|apollo)
 			if test "$BOXTYPE" = "coolstream"; then
@@ -503,7 +507,7 @@
 				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
 			fi
 			;;
-		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|cuberevo|cuberevo_mini2|cuberevo_mini|cuberevo_250hd|cuberevo_2000hd|tf7700)
+		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|hs7110|hs7420|hs7810a|hs7119|hs7429|hs7819|cuberevo|cuberevo_mini2|cuberevo_mini|cuberevo_250hd|cuberevo_2000hd|tf7700)
 			if test "$BOXTYPE" = "duckbox"; then
 				BOXMODEL="$withval"
 			else
@@ -553,6 +557,13 @@
 AM_CONDITIONAL(BOXMODEL_ATEVIO7500,test "$BOXMODEL" = "atevio7500")
 AM_CONDITIONAL(BOXMODEL_FORTIS_HDBOX,test "$BOXMODEL" = "fortis_hdbox")
 AM_CONDITIONAL(BOXMODEL_OCTAGON1008,test "$BOXMODEL" = "octagon1008")
+AM_CONDITIONAL(BOXMODEL_HS7110,test "$BOXMODEL" = "hs7110")
+AM_CONDITIONAL(BOXMODEL_HS7420,test "$BOXMODEL" = "hs7420")
+AM_CONDITIONAL(BOXMODEL_HS7810A,test "$BOXMODEL" = "hs7810a")
+AM_CONDITIONAL(BOXMODEL_HS7119,test "$BOXMODEL" = "hs7119")
+AM_CONDITIONAL(BOXMODEL_HS7429,test "$BOXMODEL" = "hs7429")
+AM_CONDITIONAL(BOXMODEL_HS7819,test "$BOXMODEL" = "hs7819")
+
 AM_CONDITIONAL(BOXMODEL_CUBEREVO,test "$BOXMODEL" = "cuberevo")
 AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI2,test "$BOXMODEL" = "cuberevo_mini2")
 AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI,test "$BOXMODEL" = "cuberevo_mini")
@@ -611,6 +622,18 @@
 	AC_DEFINE(BOXMODEL_FORTIS_HDBOX, 1, [fortis_hdbox])
 elif test "$BOXMODEL" = "octagon1008"; then
 	AC_DEFINE(BOXMODEL_OCTAGON1008, 1, [octagon1008])
+elif test "$BOXMODEL" = "hs7110"; then
+	AC_DEFINE(BOXMODEL_HS7110, 1, [hs7110])
+elif test "$BOXMODEL" = "hs7420"; then
+	AC_DEFINE(BOXMODEL_HS7420, 1, [hs7420])
+elif test "$BOXMODEL" = "hs7810a"; then
+	AC_DEFINE(BOXMODEL_HS7810A, 1, [hs7810a])
+elif test "$BOXMODEL" = "hs7119"; then
+	AC_DEFINE(BOXMODEL_HS7119, 1, [hs7119])
+elif test "$BOXMODEL" = "hs7429"; then
+	AC_DEFINE(BOXMODEL_HS7429, 1, [hs7429])
+elif test "$BOXMODEL" = "hs7819"; then
+	AC_DEFINE(BOXMODEL_HS7819, 1, [hs7819])
 elif test "$BOXMODEL" = "cuberevo"; then
 	AC_DEFINE(BOXMODEL_CUBEREVO, 1, [cuberevo])
 elif test "$BOXMODEL" = "cuberevo_mini2"; then
--- neutrino-mp-next.org/src/driver/simple_display.cpp
+++ neutrino-mp-next/src/driver/simple_display.cpp
@@ -35,6 +35,9 @@
 //#include <math.h>
 #include <sys/stat.h>
 #if HAVE_SPARK_HARDWARE
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 #define DISPLAY_DEV "/dev/vfd"
 #endif
--- neutrino-mp-next.org/lib/libdvbsub/dvbsubtitle.cpp
+++ neutrino-mp-next/lib/libdvbsub/dvbsubtitle.cpp
@@ -21,9 +21,16 @@
 #include <libavformat/avformat.h>
 #include <libavcodec/avcodec.h>
 #include <libavutil/avutil.h>
+#include <libavcodec/version.h>
 }
 #include <driver/framebuffer.h>
 #include "Debug.hpp"
+
+#if LIBAVCODEC_VERSION_INT <= AV_VERSION_INT(57, 1, 99)
+	#define CODEC_DVB_SUB CODEC_ID_DVB_SUBTITLE
+#else
+	#define CODEC_DVB_SUB AV_CODEC_ID_DVB_SUBTITLE
+#endif
 
 // Set these to 'true' for debug output:
 static bool DebugConverter = true;
@@ -206,7 +213,7 @@
 	avcodec = NULL;
 
 	avcodec_register_all();
-	avcodec = avcodec_find_decoder(CODEC_ID_DVB_SUBTITLE);
+	avcodec = avcodec_find_decoder(CODEC_DVB_SUB);//CODEC_ID_DVB_SUBTITLE or AV_CODEC_ID_DVB_SUBTITLE from 57.1.100
 	if (!avcodec) {
 		dbgconverter("cDvbSubtitleConverter: unable to get dvb subtitle codec!\n");
 		return;
--- neutrino-mp-next.org/src/driver/audiodec/ffmpegdec.cpp
+++ neutrino-mp-next/src/driver/audiodec/ffmpegdec.cpp
@@ -318,12 +318,12 @@
 		while (packet.size > 0) {
 			int got_frame = 0;
 			if (!frame) {
-				if (!(frame = avcodec_alloc_frame())) {
+				if (!(frame = av_frame_alloc())) {
 					Status=DATA_ERR;
 					break;
 				}
 			} else
-				avcodec_get_frame_defaults(frame);
+				av_frame_unref(frame);
 
 			int len = avcodec_decode_audio4(c, frame, &got_frame, &packet);
 			if (len < 0) {
@@ -378,7 +378,7 @@
 	swr_free(&swr);
 	av_free(outbuf);
 	av_free_packet(&rpacket);
-	avcodec_free_frame(&frame);
+	av_frame_free(&frame);
 	avcodec_close(c);
 	//av_free(avcc);
 
--- neutrino-mp-next.org/src/gui/vfd_setup.cpp
+++ neutrino-mp-next/src/gui/vfd_setup.cpp
@@ -186,6 +186,21 @@
 
 void CVfdSetup::showBrightnessSetup(CMenuWidget *mn_widget)
 {
+#if defined(BOXMODEL_FORTIS_HDBOX) \
+ || defined(BOXMODEL_OCTAGON1008) \
+ || defined(BOXMODEL_ATEVIO7500) \
+ || defined(BOXMODEL_HS7110) \
+ || defined(BOXMODEL_HS7420) \
+ || defined(BOXMODEL_HS7810A) \
+ || defined(BOXMODEL_HS7119) \
+ || defined(BOXMODEL_HS7429) \
+ || defined(BOXMODEL_HS7819)
+#define MAXBRIGHT 7
+#elif defined(BOXMODEL_TF7700)
+#define MAXBRIGHT 5
+#else
+#define MAXBRIGHT 15
+#endif
 	CMenuOptionNumberChooser * nc;
 	CMenuForwarder * mf;
 
@@ -195,20 +210,20 @@
 	brightnessstandby = CVFD::getInstance()->getBrightnessStandby();
 	brightnessdeepstandby = CVFD::getInstance()->getBrightnessDeepStandby();
 
-	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESS, &brightness, true, 0, 15, this, 0, 0, NONEXISTANT_LOCALE, true);
+	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESS, &brightness, true, 0, MAXBRIGHT, this, 0, 0, NONEXISTANT_LOCALE, true);
 	nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESS);
 	mn_widget->addItem(nc);
 
-	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSSTANDBY, &brightnessstandby, true, 0, 15, this, 0, 0, NONEXISTANT_LOCALE, true);
+	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSSTANDBY, &brightnessstandby, true, 0, MAXBRIGHT, this, 0, 0, NONEXISTANT_LOCALE, true);
 	nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESSSTANDBY);
 	mn_widget->addItem(nc);
 
 	if(cs_get_revision() > 7) {
-		nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSDEEPSTANDBY, &brightnessdeepstandby, true, 0, 15, this, 0, 0, NONEXISTANT_LOCALE, true);
+		nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSDEEPSTANDBY, &brightnessdeepstandby, true, 0, MAXBRIGHT, this, 0, 0, NONEXISTANT_LOCALE, true);
 		nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESSDEEPSTANDBY);
 		mn_widget->addItem(nc);
 	}
-	nc = new CMenuOptionNumberChooser(LOCALE_LCDMENU_DIM_BRIGHTNESS, &g_settings.lcd_setting_dim_brightness, vfd_enabled, -1, 15, NULL, 0, -1, LOCALE_OPTIONS_OFF, true);
+	nc = new CMenuOptionNumberChooser(LOCALE_LCDMENU_DIM_BRIGHTNESS, &g_settings.lcd_setting_dim_brightness, vfd_enabled, -1, MAXBRIGHT, NULL, 0, -1, LOCALE_OPTIONS_OFF, true);
 	nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESSDIM);
 	mn_widget->addItem(nc);
 
--- neutrino-mp-next.org/src/driver/vfd.cpp
+++ neutrino-mp-next/src/driver/vfd.cpp
@@ -51,16 +51,18 @@
 #include <stropts.h>
 #define VFD_DEVICE "/dev/vfd"
 
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
-	#define VFDLENGTH 8
-#elif defined (BOXMODEL_FORTIS_HDBOX)
-	#define VFDLENGTH 12
-#elif defined (BOXMODEL_ATEVIO7500)
-	#define VFDLENGTH 12
-#elif (defined HAVE_SPARK_HARDWARE && !defined (BOXMODEL_SPARK7162)) || defined (BOXMODEL_CUBEREVO_250HD)
-	#define VFDLENGTH 4
+#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_HS7420) || defined (BOXMODEL_HS7429) || defined (BOXMODEL_TF7700)
+#define VFDLENGTH 8
+#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#define VFDLENGTH 12
+#elif defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819) || defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_IPBOX55)
+#define VFDLENGTH 4
+#elif defined (BOXMODEL_HS7110)
+#define VFDLENGTH 0
+#elif defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+#define VFDLENGTH 14
 #else
-	#define VFDLENGTH 16
+#define VFDLENGTH 16
 #endif
 
 #define SCROLL_TIME 350000
@@ -116,6 +118,7 @@
 	}
 }
 
+#if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
 static void writeCG (unsigned char adress, unsigned char pixeldata[5])
 {
 	struct vfd_ioctl_data data;
@@ -129,6 +132,7 @@
 	write_to_vfd(VFDWRITECGRAM, &data);
 	return;
 }
+#endif
 
 static void ShowNormalText(char * str, bool fromScrollThread = false)
 {
@@ -151,7 +155,7 @@
 		return;
 	}
 
-	if (strlen(str)<VFDLENGTH)
+	if (strlen(str) < VFDLENGTH && VFDLENGTH > 7) // do not center on small displays
 		ws = (VFDLENGTH-strlen(str))/2;
 	else
 		ws = 0;
@@ -160,7 +164,7 @@
 	{
 		memcpy (data.data+ws, str, VFDLENGTH-ws);
 		data.start = 0;
-		if ((strlen(str) % 2) == 1)
+		if ((strlen(str) % 2) == 1 && VFDLENGTH > 7) // do not center on small displays
 			data.length = VFDLENGTH-ws-1;
 		else
 			data.length = VFDLENGTH-ws;
@@ -199,36 +203,40 @@
 
 	int i;
 	char *str = (char *)arg;
-	int len= strlen(str);
+	int len = strlen(str);
+	int retries = g_settings.lcd_vfd_scroll;
 	char out[VFDLENGTH+1];
-
-	memset(out, 0, VFDLENGTH+1);
-
-	int retries = g_settings.lcd_vfd_scroll;
-
-	while(retries--)
+	char buf[VFDLENGTH+65];
+
+	if (len > VFDLENGTH)
 	{
-		usleep(SCROLL_TIME);
-
-		for (i=0; i<=(len-VFDLENGTH); i++)
+		memset(buf, ' ', (len + VFDLENGTH));
+		memcpy(buf, str, len);
+		memset(out, 0, VFDLENGTH+1);
+
+		while(retries--)
 		{
-			// scroll text till end
-			memset(out, ' ', VFDLENGTH);
-			memcpy(out, str+i, VFDLENGTH);
-			ShowNormalText(out,true);
-			usleep(SCROLL_TIME);
+			usleep(SCROLL_TIME); //wait scroll time
+
+			for (i=0; i<=(len-1); i++)
+			{
+				// scroll text till end
+				memcpy(out, buf+i, VFDLENGTH);
+				ShowNormalText(out,true);
+				usleep(SCROLL_TIME);
+			}
 		}
-
-		memcpy(out, str, VFDLENGTH); // display first VFDLENGTH-1 chars after scrolling
-		ShowNormalText(out,true);
-	}
+	}
+	memcpy(out, str, VFDLENGTH); // display first VFDLENGTH chars after scrolling
+	ShowNormalText(out,true);
 
 	pthread_exit(0);
 
 	return NULL;
 }
 
-#endif
+#endif //HAVE_DUCKBOX_HARDWARE
+
 CVFD::CVFD()
 {
 #ifdef VFD_UPDATE
@@ -315,6 +323,9 @@
 	if(g_settings.lcd_info_line){
 		switch_name_time_cnt = g_settings.timing[SNeutrinoSettings::TIMING_INFOBAR] + 10;
 	}
+#if defined (BOXMODEL_OCTAGON1008)
+	ShowIcon(ICON_COLON2, false);
+#endif
 }
 
 void* CVFD::TimeThread(void *)
@@ -369,12 +380,52 @@
 #else
 // Brightness
 	struct vfd_ioctl_data data;
+  #if !defined (BOXMODEL_HS7810A) \
+   && !defined (BOXMODEL_HS7119) \
+   && !defined (BOXMODEL_HS7819)
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
-	unsigned char setting = brightness;
-	data.start = setting & 0x07;
+	data.start = brightness & 0x07;
 	data.length = 0;
 	write_to_vfd(VFDBRIGHTNESS, &data);
-#if !defined (BOXMODEL_UFS912) && !defined (BOXMODEL_UFS913) && !defined (BOXMODEL_OCTAGON1008)
+  #endif
+  #if defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+	usleep(100000);
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.data[0] = 0;
+	data.length = 5;
+	if (power) {
+		data.start = 0x01; // red led
+	}
+	else
+	{
+		data.start = 0xf2; // cross plus blue led
+	}
+	data.data[4] = 0; // off
+	data.length = 5;
+	write_to_vfd(VFDSETLED, &data);
+	usleep(100000);
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.data[0] = 0;
+	data.length = 5;
+	if (power) {
+		data.start = 0xf2; // cross plus blue led
+	}
+	else
+	{
+		data.start = 0x01; // red led
+	}
+	data.start = 0;
+	data.data[4] = brightness*2;
+	data.length = 5;
+	write_to_vfd(VFDSETLED, &data);
+#elif defined (BOXMODEL_HS7420) || (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7429) || defined (BOXMODEL_HS7819)
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.start = 0;
+	data.data[0] = 0x02; // logo
+	data.data[4] = (brightness & 0x07);
+	data.length = 5;
+	write_to_vfd(VFDSETLED, &data);
+#elif !defined (BOXMODEL_UFS912) && !defined (BOXMODEL_UFS913) && !defined (BOXMODEL_OCTAGON1008)
 // Power on/off
 	if (power) {
 		data.start = 0x01;
@@ -383,8 +434,8 @@
 	}
 	data.length = 0;
 	write_to_vfd(VFDDISPLAYWRITEONOFF, &data, true);
-#endif
-#endif
+  #endif
+#endif  //HAVE_DUCKBOX_HARDWARE
 }
 
 void CVFD::setlcdparameter(void)
@@ -532,10 +583,23 @@
 			if(force || ( switch_name_time_cnt == 0 && ((hour != t->tm_hour) || (minute != t->tm_min))) ) {
 				hour = t->tm_hour;
 				minute = t->tm_min;
-#if (defined HAVE_SPARK_HARDWARE && !defined (BOXMODEL_SPARK7162)) || defined (BOXMODEL_CUBEREVO_250HD)
+#if !defined (BOXMODEL_HS7810A) && !defined (BOXMODEL_HS7119) && !defined (BOXMODEL_HS7819)
+  #if defined (BOXMODEL_OCTAGON1008)
+				ShowIcon(ICON_COLON2, true);
+				strftime(timestr, 5, "%H%M", t);
+  #elif (defined HAVE_SPARK_HARDWARE && !defined (BOXMODEL_SPARK7162)) || defined (BOXMODEL_CUBEREVO_250HD)
 				strftime(timestr, 20, "%H%M", t);
-#else
-				strftime(timestr, 20, "%H:%M", t);
+  #else
+				strftime(timestr, 6, "%H:%M", t);
+  #endif
+#else //HS7810A, HS7119 or HS7819, string should not scroll
+				strftime(timestr, 6, "%H:%M", t);
+				struct vfd_ioctl_data data;
+				memset(data.data, ' ', 6);
+				memcpy (data.data, timestr, 6);
+				data.start = 0;
+				data.length = 5;
+				write_to_vfd(VFDDISPLAYCHARS, &data);
 #endif
 				ShowText(timestr);
 			}
@@ -589,10 +653,14 @@
 	}
 }
 #endif
+
 void CVFD::showRCLock(int /*duration*/)
 {
 #ifdef HAVE_DUCKBOX_HARDWARE
-	ShowText("<LOCKED>");
+	if (VFDLENGTH < 8)
+		ShowText("Lock");
+	else
+		ShowText("<LOCKED>");
 #endif
 }
 
@@ -614,13 +682,13 @@
 	if ((mode == MODE_TVRADIO) && g_settings.lcd_setting[SNeutrinoSettings::LCD_SHOW_VOLUME]) {
 #if HAVE_DUCKBOX_HARDWARE
 		int pp = (int) round((double) vol / (double) 2);
-		int i;
 		if(oldpp != pp)
 		{
-#if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
+  #if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
 			unsigned char speaker[5] = {0x1C, 0x1C, 0x1C, 0x3E, 0x7F}; // speaker symbol
 			writeCG(0, speaker);
 
+			int i;
 			int j = pp / 5;
 			// v-lines 0-5 = {0x10,0x11,0x12,0x13,0x14,0x15}
 			char c0[1] = {0x5F};
@@ -659,19 +727,33 @@
 					strncat(VolumeBar, c0, 1);
 			}
 			ShowText(VolumeBar);
-#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+  #elif defined (BOXMODEL_TF7700)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL: %d%%", (int)vol);
 			ShowText(vol_chr);
-#elif (defined HAVE_SPARK_HARDWARE && !defined (BOXMODEL_SPARK7162)) || defined (BOXMODEL_CUBEREVO_250HD)
+  #elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_HS7420) || defined (BOXMODEL_HS7429)
 			char vol_chr[64] = "";
-			snprintf(vol_chr, sizeof(vol_chr)-1, "%d", (int)vol);
+			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL=%3d", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_UFS912) || defined (BOXMODEL_UFS913) || defined (BOXMODEL_CUBEREVO) || defined (BOXMODEL_CUBEREVO_MINI) || defined (BOXMODEL_CUBEREVO_MINI2) || defined (BOXMODEL_CUBEREVO_2000HD)
+  #elif defined (BOXMODEL_SPARK) \
+     || defined (BOXMODEL_HS7119) \
+     || defined (BOXMODEL_HS7810A) \
+     || defined (BOXMODEL_HS7819)
+			char vol_chr[64] = "";
+			snprintf(vol_chr, sizeof(vol_chr)-1, "v%3d", (int)vol);
+			ShowText(vol_chr);
+  #elif defined (BOXMODEL_FORTIS_HDBOX) \
+     || defined (BOXMODEL_ATEVIO7500) \
+     || defined (BOXMODEL_UFS912) \
+     || defined (BOXMODEL_UFS913) \
+     || defined (BOXMODEL_CUBEREVO) \
+     || defined (BOXMODEL_CUBEREVO_MINI) \
+     || defined (BOXMODEL_CUBEREVO_MINI2) \
+     || defined (BOXMODEL_CUBEREVO_2000HD)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "Volume: %d%%", (int)vol);
 			ShowText(vol_chr);
-#endif
+  #endif
 			oldpp = pp;
 		}
 #else
@@ -885,6 +967,9 @@
 		ShowIcon(FP_ICON_COL1, true);
 		ShowIcon(FP_ICON_COL2, true);
 #endif
+		ClearIcons();
+		ShowIcon(FP_ICON_USB, false);
+		ShowIcon(FP_ICON_HDD, false);
 		showclock = true;
 		showTime(true);      /* "showclock = true;" implies that "showTime();" does a "displayUpdate();" */
 		                 /* "showTime()" clears the whole lcd in MODE_STANDBY                         */
@@ -928,8 +1013,17 @@
 int CVFD::getBrightness()
 {
 	//FIXME for old neutrino.conf
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
+	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] > 7)
+		g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] = 7;
+#else
 	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] > 15)
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] = 15;
+#endif
 
 	return g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS];
 }
@@ -945,8 +1039,17 @@
 int CVFD::getBrightnessStandby()
 {
 	//FIXME for old neutrino.conf
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
+	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] > 7)
+		g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] = 7;
+#else
 	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] > 15)
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] = 15;
+#endif
 	return g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS];
 }
 
@@ -961,8 +1064,17 @@
 int CVFD::getBrightnessDeepStandby()
 {
 	//FIXME for old neutrino.conf
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
+	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] > 7)
+		g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] = 7;
+#else
 	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] > 15)
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] = 15;
+#endif
 	return g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS];
 }
 
@@ -1027,13 +1139,15 @@
 	else
 		text[0] = 0;
 #else
-#if defined (BOXMODEL_CUBEREVO_250HD)
+#if defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
 	ShowText("    ");
-#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700) || defined (BOXMODEL_HS7420) || defined (BOXMODEL_HS7429)
 	ShowText("        ");
 #elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
 	ShowText("            ");
-#else
+#elif defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+	ShowText("              ");
+#elif !defined (BOXMODEL_HS7110)
 	ShowText("                ");
 #endif
 #endif
@@ -1048,13 +1162,22 @@
 	if(ret < 0)
 		perror(show ? "IOC_FP_SET_ICON" : "IOC_FP_CLEAR_ICON");
 #else
-#if defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7110) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_SPARK)
 	return;
 #endif
+	if (icon == 0)
+		return;
 	struct vfd_ioctl_data data;
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = 0x00;
-	data.data[0] = icon & 0x0f;
+	data.data[0] = icon;
 	data.data[4] = show;
 	data.length = 5;
 	write_to_vfd(VFDICONDISPLAYONOFF, &data);
@@ -1065,12 +1188,20 @@
 #ifdef HAVE_DUCKBOX_HARDWARE
 void CVFD::ClearIcons()
 {
-#if defined (BOXMODEL_ATEVIO7500) || (defined HAVE_SPARK_HARDWARE && !defined (BOXMODEL_SPARK7162))
+#if defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7110) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819)
 	return;
 #endif
 	for (int id = 0x10; id < FP_ICON_MAX; id++) {
-#if defined (BOXMODEL_OCTAGON1008) || defined(BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_TF7700)
-		if (id != 0x16)
+#if defined (BOXMODEL_OCTAGON1008)
+		if (id != FP_ICON_USB && id != FP_ICON_HDD)
+#elif defined(BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_TF7700)
+		if (id != FP_ICON_USB)
 #else
 		if (id != 0x10 && id != 0x12)
 #endif
@@ -1440,5 +1571,3 @@
 }
 /*****************************************************************************************/
 #endif // VFD_UPDATE
-
-

