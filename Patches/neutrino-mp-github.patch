--- neutrino-mp-github.org/acinclude.m4
+++ neutrino-mp-github/acinclude.m4
@@ -478,6 +478,10 @@
 			BOXTYPE="duckbox"
 			BOXMODEL="$withval"
 			;;
+		hs7*)
+			BOXTYPE="duckbox"
+			BOXMODEL="$withval"
+			;;
 		cuberevo*)
 			BOXTYPE="duckbox"
 			BOXMODEL="$withval"
@@ -494,7 +498,7 @@
 	[  --with-boxmodel         valid for coolstream: nevis, apollo
                           valid for dreambox: dm500, dm500plus, dm600pvr, dm56x0, dm7000, dm7020, dm7025
                           valid for ipbox: ip200, ip250, ip350, ip400
-                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, cuberevo, cuberevo_mini2, cuberevo_2000hd, tf7700],
+                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7810a, hs7119, hs7819, cuberevo, cuberevo_mini2, cuberevo_2000hd, tf7700],
 	[case "${withval}" in
 		nevis|apollo)
 			if test "$BOXTYPE" = "coolstream"; then
@@ -517,7 +521,7 @@
 				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
 			fi
 			;;
-		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|cuberevo|cuberevo_mini2|cuberevo_2000hd|tf7700)
+		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|hs7110|hs7810a|hs7119|hs7819|cuberevo|cuberevo_mini2|cuberevo_2000hd|tf7700)
 			if test "$BOXTYPE" = "duckbox"; then
 				BOXMODEL="$withval"
 			else
@@ -563,10 +567,17 @@
 AM_CONDITIONAL(BOXMODEL_UFS912,test "$BOXMODEL" = "ufs912")
 AM_CONDITIONAL(BOXMODEL_UFS913,test "$BOXMODEL" = "ufs913")
 AM_CONDITIONAL(BOXMODEL_UFS922,test "$BOXMODEL" = "ufs922")
+
 AM_CONDITIONAL(BOXMODEL_SPARK7162,test "$BOXMODEL" = "spark7162")
+
 AM_CONDITIONAL(BOXMODEL_ATEVIO7500,test "$BOXMODEL" = "atevio7500")
 AM_CONDITIONAL(BOXMODEL_FORTIS_HDBOX,test "$BOXMODEL" = "fortis_hdbox")
 AM_CONDITIONAL(BOXMODEL_OCTAGON1008,test "$BOXMODEL" = "octagon1008")
+AM_CONDITIONAL(BOXMODEL_HS7110,test "$BOXMODEL" = "hs7110")
+AM_CONDITIONAL(BOXMODEL_HS7810A,test "$BOXMODEL" = "hs7810a")
+AM_CONDITIONAL(BOXMODEL_HS7119,test "$BOXMODEL" = "hs7119")
+AM_CONDITIONAL(BOXMODEL_HS7819,test "$BOXMODEL" = "hs7819")
+
 AM_CONDITIONAL(BOXMODEL_CUBEREVO,test "$BOXMODEL" = "cuberevo")
 AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI2,test "$BOXMODEL" = "cuberevo_mini2")
 AM_CONDITIONAL(BOXMODEL_CUBEREVO_2000HD,test "$BOXMODEL" = "cuberevo_2000hd")
@@ -623,6 +634,14 @@
 	AC_DEFINE(BOXMODEL_FORTIS_HDBOX, 1, [fortis_hdbox])
 elif test "$BOXMODEL" = "octagon1008"; then
 	AC_DEFINE(BOXMODEL_OCTAGON1008, 1, [octagon1008])
+elif test "$BOXMODEL" = "hs7110"; then
+	AC_DEFINE(BOXMODEL_HS7110, 1, [hs7110])
+elif test "$BOXMODEL" = "hs7810a"; then
+	AC_DEFINE(BOXMODEL_HS7810A, 1, [hs7810a])
+elif test "$BOXMODEL" = "hs7119"; then
+	AC_DEFINE(BOXMODEL_HS7119, 1, [hs7119])
+elif test "$BOXMODEL" = "hs7819"; then
+	AC_DEFINE(BOXMODEL_HS7819, 1, [hs7819])
 elif test "$BOXMODEL" = "cuberevo"; then
 	AC_DEFINE(BOXMODEL_CUBEREVO, 1, [cuberevo])
 elif test "$BOXMODEL" = "cuberevo_mini2"; then
--- neutrino-mp-github.org/src/driver/vfd.cpp
+++ neutrino-mp-github/src/driver/vfd.cpp
@@ -58,6 +58,14 @@
 	#define VFDLENGTH 12
 #elif defined (BOXMODEL_ATEVIO7500)
 	#define VFDLENGTH 12
+#elif defined (BOXMODEL_SPARK)
+	#define VFDLENGTH 4
+#elif defined (BOXMODEL_HS7119)
+	#define VFDLENGTH 4
+#elif defined (BOXMODEL_HS7819)
+	#define VFDLENGTH 4
+#elif defined (BOXMODEL_HS7110)
+	#define VFDLENGTH 0
 #else
 	#define VFDLENGTH 16
 #endif
@@ -115,6 +123,7 @@
 	}
 }
 
+#if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
 static void writeCG (unsigned char adress, unsigned char pixeldata[5])
 {
 	struct vfd_ioctl_data data;
@@ -128,6 +137,7 @@
 	write_to_vfd(VFDWRITECGRAM, &data);
 	return;
 }
+#endif
 
 static void ShowNormalText(char * str, bool fromScrollThread = false)
 {
@@ -184,7 +194,7 @@
 		pthread_join(vfd_scrollText, NULL);
 
 		vfd_scrollText = 0;
-		scrollstr = "";
+		scrollstr = (char *)"";
 	}
 
 	//scroll text thread
@@ -198,36 +208,39 @@
 
 	int i;
 	char *str = (char *)arg;
-	int len= strlen(str);
+	int len = strlen(str);
+	int retries = g_settings.lcd_vfd_scroll;
 	char out[VFDLENGTH+1];
-
-	memset(out, 0, VFDLENGTH+1);
-
-	int retries = g_settings.lcd_vfd_scroll;
-
-	while(retries--)
+	char buf[VFDLENGTH+65];
+
+	if (len > VFDLENGTH)
 	{
-		usleep(SCROLL_TIME);
-
-		for (i=0; i<=(len-VFDLENGTH); i++)
+		memset(buf, ' ', (len + VFDLENGTH));
+		memcpy(buf, str, len);
+		memset(out, 0, VFDLENGTH+1);
+
+		while(retries--)
 		{
-			// scroll text till end
-			memset(out, ' ', VFDLENGTH);
-			memcpy(out, str+i, VFDLENGTH);
-			ShowNormalText(out,true);
-			usleep(SCROLL_TIME);
+			usleep(SCROLL_TIME); //wait scroll time
+
+			for (i=0; i<=(len-1); i++)
+			{
+				// scroll text till end
+				memcpy(out, buf+i, VFDLENGTH);
+				ShowNormalText(out,true);
+				usleep(SCROLL_TIME);
+			}
 		}
-
-		memcpy(out, str, VFDLENGTH); // display first VFDLENGTH-1 chars after scrolling
-		ShowNormalText(out,true);
-	}
+	}
+	memcpy(out, str, VFDLENGTH); // display first VFDLENGTH chars after scrolling
+	ShowNormalText(out,true);
 
 	pthread_exit(0);
 
 	return NULL;
 }
 
-#endif
+#endif //HAVE_DUCKBOX_HARDWARE
 
 CVFD::CVFD()
 {
@@ -315,6 +328,9 @@
 	if(g_settings.lcd_info_line){
 		switch_name_time_cnt = g_settings.timing[SNeutrinoSettings::TIMING_INFOBAR] + 10;
 	}
+#if defined (BOXMODEL_OCTAGON1008)
+	ShowIcon(ICON_COLON2, false);
+#endif
 }
 
 void* CVFD::TimeThread(void *)
@@ -370,11 +386,35 @@
 // Brightness
 	struct vfd_ioctl_data data;
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
-	unsigned char setting = brightness;
-	data.start = setting & 0x07;
+//	unsigned char setting = brightness;
+	data.start = brightness & 0x07;
 	data.length = 0;
 	write_to_vfd(VFDBRIGHTNESS, &data);
-#if !defined (BOXMODEL_UFS912) && !defined (BOXMODEL_UFS913) && !defined (BOXMODEL_OCTAGON1008)
+  #if defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+	usleep(100000);
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.start = 0;
+	data.length = 5;
+	if (power) {
+		data.data[0] = 0xf2; // cross plus blue led
+	}
+	else
+	{
+		data.data[0] = 0x01; // red led
+	}
+	data.start = 0;
+	data.data[4] = brightness*2;
+	data.length = 5;
+	write_to_vfd(VFDPWRLED, &data);
+#elif defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819)
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.start = 0;
+	data.data[0] = 0x02; // logo
+	data.data[4] = (setting & 0x07);
+	data.length = 5;
+	write_to_vfd(VFDPWRLED, &data);
+  #endif
+  #if !defined (BOXMODEL_UFS912) && !defined (BOXMODEL_UFS913) && !defined (BOXMODEL_OCTAGON1008)
 // Power on/off
 	if (power) {
 		data.start = 0x01;
@@ -383,8 +423,8 @@
 	}
 	data.length = 0;
 	write_to_vfd(VFDDISPLAYWRITEONOFF, &data, true);
-#endif
-#endif
+  #endif
+#endif  //HAVE_DUCKBOX_HARDWARE
 }
 
 void CVFD::setlcdparameter(void)
@@ -532,8 +572,23 @@
 			if(force || ( switch_name_time_cnt == 0 && ((hour != t->tm_hour) || (minute != t->tm_min))) ) {
 				hour = t->tm_hour;
 				minute = t->tm_min;
+#if !defined (BOXMODEL_HS7810A) && !defined (BOXMODEL_HS7119) && !defined (BOXMODEL_HS7819)
+  #if defined (BOXMODEL_OCTAGON1008)
+				ShowIcon(ICON_COLON2, true);
+				strftime(timestr, 5, "%H%M", t);
+  #else
 				strftime(timestr, 20, "%H:%M", t);
+  #endif
 				ShowText(timestr);
+#else //HS7810A, HS7119 or HS7819, string should not scroll
+				strftime(timestr, 6, "%H:%M", t);
+				struct vfd_ioctl_data data;
+				memset(data.data, ' ', 6);
+				memcpy (data.data, timestr, 6);
+				data.start = 0;
+				data.length = 5;
+				write_to_vfd(VFDDISPLAYCHARS, &data);
+#endif
 			}
 		}
 	}
@@ -656,11 +711,15 @@
 					strncat(VolumeBar, c0, 1);
 			}
 			ShowText(VolumeBar);
-#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+#elif defined (BOXMODEL_TF7700)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL: %d%%", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_SPARK)
+#elif defined (BOXMODEL_OCTAGON1008)
+			char vol_chr[64] = "";
+			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL=%3d", (int)vol);
+			ShowText(vol_chr);
+#elif defined (BOXMODEL_SPARK) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "%d", (int)vol);
 			ShowText(vol_chr);
@@ -882,6 +941,9 @@
 		ShowIcon(FP_ICON_COL1, true);
 		ShowIcon(FP_ICON_COL2, true);
 #endif
+		ClearIcons();
+		ShowIcon(FP_ICON_USB, false);
+		ShowIcon(FP_ICON_HDD, false);
 		showclock = true;
 		showTime(true);      /* "showclock = true;" implies that "showTime();" does a "displayUpdate();" */
 		                 /* "showTime()" clears the whole lcd in MODE_STANDBY                         */
@@ -1024,11 +1086,13 @@
 	else
 		text[0] = 0;
 #else
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+#if defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
+	ShowText("    ");
+#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
 	ShowText("        ");
 #elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
 	ShowText("            ");
-#else
+#elif !defined (BOXMODEL_HS7110)
 	ShowText("                ");
 #endif
 #endif
@@ -1043,13 +1107,20 @@
 	if(ret < 0)
 		perror(show ? "IOC_FP_SET_ICON" : "IOC_FP_CLEAR_ICON");
 #else
-#if defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7110) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_SPARK)
 	return;
 #endif
+	if (icon == 0)
+		return;
 	struct vfd_ioctl_data data;
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = 0x00;
-	data.data[0] = icon & 0x0f;
+	data.data[0] = icon;
 	data.data[4] = show;
 	data.length = 5;
 	write_to_vfd(VFDICONDISPLAYONOFF, &data);
@@ -1060,15 +1131,22 @@
 #ifdef HAVE_DUCKBOX_HARDWARE
 void CVFD::ClearIcons()
 {
-#if defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7110) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_SPARK)
 	return;
-#endif
+  #endif
 	for (int id = 0x10; id < FP_ICON_MAX; id++) {
-#if defined (BOXMODEL_OCTAGON1008) || defined(BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_TF7700)
-		if (id != 0x16)
-#else
+  #if defined (BOXMODEL_OCTAGON1008)
+		if (id != FP_ICON_USB && id != FP_ICON_HDD)
+  #elif defined(BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_TF7700)
+		if (id != FP_ICON_USB)
+  #else
 		if (id != 0x10 && id != 0x12)
-#endif
+  #endif
 			ShowIcon((fp_icon)id, false);
 	}
 	return;
@@ -1090,7 +1168,7 @@
 	ShowNormalText(g_str);
 }
 #else
-void CVFD::ShowText(const char * str)
+void CVFD::ShowText(const char *str)
 {
 	char flags[2] = { FP_FLAG_ALIGN_LEFT, 0 };
 
@@ -1435,5 +1513,3 @@
 }
 /*****************************************************************************************/
 #endif // VFD_UPDATE
-
-
--- neutrino-mp-github.org/src/driver/record.cpp
+++ neutrino-mp-github/src/driver/record.cpp
@@ -54,7 +54,7 @@
 #ifdef ENABLE_GRAPHLCD
 #include <driver/nglcd.h>
 #endif
-#if HAVE_SPARK_HARDWARE
+#if HAVE_SPARK_HARDWARE || HAVE_DUCKBOX_HARDWARE
 #include <driver/display.h>
 #endif
 #include <driver/radiotext.h>
@@ -1146,8 +1146,10 @@
 
 	if(inst->Timeshift())
 		autoshift = false;
-#ifdef BOXMODEL_SPARK7162
+#if defined(BOXMODEL_SPARK7162)
 		CVFD::getInstance()->SetIcons(SPARK_TIMESHIFT, false);
+#elif defined(BOXMODEL_FORTIS_HDBOX)
+		CVFD::getInstance()->ShowIcon(FP_ICON_TIMESHIFT, false);
 #endif
 
 	delete inst;
@@ -1293,8 +1295,10 @@
 		std::string tmode = "ptimeshift"; // already recording, pause
 		bool res = true;
 		t_channel_id live_channel_id = CZapit::getInstance()->GetCurrentChannelID();
-#ifdef BOXMODEL_SPARK7162
+#if defined (BOXMODEL_SPARK7162)
 		CVFD::getInstance()->SetIcons(SPARK_TIMESHIFT, true);
+#elif defined(BOXMODEL_FORTIS_HDBOX)
+		CVFD::getInstance()->ShowIcon(FP_ICON_TIMESHIFT, true);
 #endif
 		/* start temporary timeshift if enabled and not running, but dont start second record */
 		if (g_settings.temp_timeshift) {
--- neutrino-mp-github.org/src/neutrino.cpp
+++ neutrino-mp-github/src/neutrino.cpp
@@ -3689,6 +3689,7 @@
 			stop_video();
 
 #if HAVE_SPARK_HARDWARE || HAVE_DUCKBOX_HARDWARE
+			CVFD::getInstance()->ClearIcons();
 			if (retcode == 1) {
 				CCECSetup cecsetup;
 				cecsetup.setCECSettings(false);
@@ -3697,6 +3698,9 @@
 #ifdef ENABLE_GRAPHLCD
 			if (retcode == 1)
 				nGLCD::SetBrightness(0);
+#endif
+#if defined (FORTIS_HDBOX)
+			CVFD::getInstance()->setlcdparameter(g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS], 0);
 #endif
 
 			printf("[neutrino] This is the end. exiting with code %d\n", retcode);
@@ -3904,6 +3908,9 @@
 			g_Zapit->lockPlayBack();
 		}
 
+#if defined (FORTIS_HDBOX)
+		CVFD::getInstance()->setlcdparameter(g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS], 0);
+#endif
 		videoDecoder->Standby(true);
 
 		g_Sectionsd->setServiceChanged(0, false);
@@ -3953,6 +3960,9 @@
 		CVFD::getInstance()->setMode(CVFD::MODE_TVRADIO);
 		CVFD::getInstance()->ShowText("resume");
 		cpuFreq->SetCpuFreq(g_settings.cpufreq * 1000 * 1000);
+#if defined (FORTIS_HDBOX)
+		CVFD::getInstance()->setlcdparameter(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS], 1);
+#endif
 		videoDecoder->Standby(false);
 		CEpgScan::getInstance()->Stop();
 		g_RCInput->killTimer(fst_timer);
--- neutrino-mp-github.org/src/gui/movieplayer.cpp
+++ neutrino-mp-github/src/gui/movieplayer.cpp
@@ -400,7 +400,12 @@
 
 	switch (playstate) {
 		case CMoviePlayerGui::PAUSE:
-#if !defined(BOXMODEL_UFS910) && !defined(BOXMODEL_UFS912) && !defined(BOXMODEL_UFS913) && !defined(BOXMODEL_UFS922)
+#if !defined(BOXMODEL_UFS910) \
+ && !defined(BOXMODEL_UFS912) \
+ && !defined(BOXMODEL_UFS913) \
+ && !defined(BOXMODEL_UFS922) \
+ && !defined(BOXMODEL_FORTIS_HDBOX) \
+ && !defined(BOXMODEL_OCTAGON1008)
 			lcd = "|| ";
 #else
 			lcd = "";
@@ -411,14 +416,20 @@
 			} else if (speed > 0) {
 				sprintf(tmp, "%dx|> ", abs(speed));
 				lcd = tmp;
-#if !defined(BOXMODEL_UFS910) && !defined(BOXMODEL_UFS912) && !defined(BOXMODEL_UFS913) && !defined(BOXMODEL_UFS922)
-			} else
+			}
+#if !defined(BOXMODEL_UFS910) \
+ && !defined(BOXMODEL_UFS912) \
+ && !defined(BOXMODEL_UFS913) \
+ && !defined(BOXMODEL_UFS922) \
+ && !defined(BOXMODEL_OCTAGON1008)
+			else
 				lcd = "|| ";
 #else
-			} else
+			else
 				lcd = "";
 #endif
 			break;
+#if !defined(BOXMODEL_OCTAGON1008)
 		case CMoviePlayerGui::REW:
 			sprintf(tmp, "%dx<< ", abs(speed));
 			lcd = tmp;
@@ -427,8 +438,15 @@
 			sprintf(tmp, "%dx>> ", abs(speed));
 			lcd = tmp;
 			break;
+#endif
 		case CMoviePlayerGui::PLAY:
-#if !defined(BOXMODEL_UFS910) && !defined(BOXMODEL_UFS912) && !defined(BOXMODEL_UFS913) && !defined(BOXMODEL_UFS922) && !defined(BOXMODEL_CUBEREVO_MINI2)
+#if !defined(BOXMODEL_UFS910) \
+ && !defined(BOXMODEL_UFS912) \
+ && !defined(BOXMODEL_UFS913) \
+ && !defined(BOXMODEL_UFS922) \
+ && !defined(BOXMODEL_FORTIS_HDBOX) \
+ && !defined(BOXMODEL_OCTAGON1008) \
+ && !defined(BOXMODEL_CUBEREVO_MINI2)
 			lcd = "> ";
 #endif
 			break;

