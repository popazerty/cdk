--- neutrino-mp.org/acinclude.m4
+++ neutrino-mp/acinclude.m4
@@ -464,6 +464,10 @@
 			BOXTYPE="duckbox"
 			BOXMODEL="$withval"
 			;;
+		hs7*)
+			BOXTYPE="duckbox"
+			BOXMODEL="$withval"
+			;;
 		cuberevo*)
 			BOXTYPE="duckbox"
 			BOXMODEL="$withval"
@@ -480,7 +484,7 @@
 	[  --with-boxmodel         valid for coolstream: nevis, apollo
                           valid for dreambox: dm500, dm500plus, dm600pvr, dm56x0, dm7000, dm7020, dm7025
                           valid for ipbox: ip200, ip250, ip350, ip400
-                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, cuberevo, cuberevo_mini2, cuberevo_2000hd, tf7700],
+                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7420, hs7810a, hs7119, hs7429, hs7819, cuberevo, cuberevo_mini2, cuberevo_2000hd, tf7700],
 	[case "${withval}" in
 		nevis|apollo)
 			if test "$BOXTYPE" = "coolstream"; then
@@ -503,7 +507,7 @@
 				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
 			fi
 			;;
-		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|cuberevo|cuberevo_mini2|cuberevo_2000hd|tf7700)
+		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|hs7110|hs7420|hs7810a|hs7119|hs7429|hs7819|cuberevo|cuberevo_mini2|cuberevo_2000hd|tf7700)
 			if test "$BOXTYPE" = "duckbox"; then
 				BOXMODEL="$withval"
 			else
@@ -553,6 +557,13 @@
 AM_CONDITIONAL(BOXMODEL_ATEVIO7500,test "$BOXMODEL" = "atevio7500")
 AM_CONDITIONAL(BOXMODEL_FORTIS_HDBOX,test "$BOXMODEL" = "fortis_hdbox")
 AM_CONDITIONAL(BOXMODEL_OCTAGON1008,test "$BOXMODEL" = "octagon1008")
+AM_CONDITIONAL(BOXMODEL_HS7110,test "$BOXMODEL" = "hs7110")
+AM_CONDITIONAL(BOXMODEL_HS7420,test "$BOXMODEL" = "hs7420")
+AM_CONDITIONAL(BOXMODEL_HS7810A,test "$BOXMODEL" = "hs7810a")
+AM_CONDITIONAL(BOXMODEL_HS7119,test "$BOXMODEL" = "hs7119")
+AM_CONDITIONAL(BOXMODEL_HS7429,test "$BOXMODEL" = "hs7429")
+AM_CONDITIONAL(BOXMODEL_HS7819,test "$BOXMODEL" = "hs7819")
+
 AM_CONDITIONAL(BOXMODEL_CUBEREVO,test "$BOXMODEL" = "cuberevo")
 AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI2,test "$BOXMODEL" = "cuberevo_mini2")
 AM_CONDITIONAL(BOXMODEL_CUBEREVO_2000HD,test "$BOXMODEL" = "cuberevo_2000hd")
@@ -609,6 +620,18 @@
 	AC_DEFINE(BOXMODEL_FORTIS_HDBOX, 1, [fortis_hdbox])
 elif test "$BOXMODEL" = "octagon1008"; then
 	AC_DEFINE(BOXMODEL_OCTAGON1008, 1, [octagon1008])
+elif test "$BOXMODEL" = "hs7110"; then
+	AC_DEFINE(BOXMODEL_HS7110, 1, [hs7110])
+elif test "$BOXMODEL" = "hs7420"; then
+	AC_DEFINE(BOXMODEL_HS7420, 1, [hs7420])
+elif test "$BOXMODEL" = "hs7810a"; then
+	AC_DEFINE(BOXMODEL_HS7810A, 1, [hs7810a])
+elif test "$BOXMODEL" = "hs7119"; then
+	AC_DEFINE(BOXMODEL_HS7119, 1, [hs7119])
+elif test "$BOXMODEL" = "hs7429"; then
+	AC_DEFINE(BOXMODEL_HS7429, 1, [hs7429])
+elif test "$BOXMODEL" = "hs7819"; then
+	AC_DEFINE(BOXMODEL_HS7819, 1, [hs7819])
 elif test "$BOXMODEL" = "cuberevo"; then
 	AC_DEFINE(BOXMODEL_CUBEREVO, 1, [cuberevo])
 elif test "$BOXMODEL" = "cuberevo_mini2"; then
--- neutrino-mp.org/src/driver/simple_display.cpp
+++ neutrino-mp/src/driver/simple_display.cpp
@@ -35,6 +35,9 @@
 //#include <math.h>
 #include <sys/stat.h>
 #if HAVE_SPARK_HARDWARE
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 #define DISPLAY_DEV "/dev/vfd"
 #endif
--- neutrino-mp.org/src/gui/vfd_setup.cpp
+++ neutrino-mp/src/gui/vfd_setup.cpp
@@ -181,6 +181,21 @@
 
 void CVfdSetup::showBrightnessSetup(CMenuWidget *mn_widget)
 {
+#if defined(BOXMODEL_FORTIS_HDBOX) \
+ || defined(BOXMODEL_OCTAGON1008) \
+ || defined(BOXMODEL_ATEVIO7500) \
+ || defined(BOXMODEL_HS7110) \
+ || defined(BOXMODEL_HS7420) \
+ || defined(BOXMODEL_HS7810A) \
+ || defined(BOXMODEL_HS7119) \
+ || defined(BOXMODEL_HS7429) \
+ || defined(BOXMODEL_HS7819)
+#define MAXBRIGHT 7
+#else
+#define MAXBRIGHT 15
+#endif
 	CMenuOptionNumberChooser * nc;
 	CMenuForwarder * mf;
 
@@ -190,20 +203,20 @@
 	brightnessstandby = CVFD::getInstance()->getBrightnessStandby();
 	brightnessdeepstandby = CVFD::getInstance()->getBrightnessDeepStandby();
 
-	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESS, &brightness, true, 0, 15, this, 0, 0, NONEXISTANT_LOCALE, NULL, true);
+	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESS, &brightness, true, 0, MAXBRIGHT, this, 0, 0, NONEXISTANT_LOCALE, NULL, true);
 	nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESS);
 	mn_widget->addItem(nc);
 
-	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSSTANDBY, &brightnessstandby, true, 0, 15, this, 0, 0, NONEXISTANT_LOCALE, NULL, true);
+	nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSSTANDBY, &brightnessstandby, true, 0, MAXBRIGHT, this, 0, 0, NONEXISTANT_LOCALE, NULL, true);
 	nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESSSTANDBY);
 	mn_widget->addItem(nc);
 
 	if(cs_get_revision() > 7) {
-		nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSDEEPSTANDBY, &brightnessdeepstandby, true, 0, 15, this, 0, 0, NONEXISTANT_LOCALE, NULL, true);
+		nc = new CMenuOptionNumberChooser(LOCALE_LCDCONTROLER_BRIGHTNESSDEEPSTANDBY, &brightnessdeepstandby, true, 0, MAXBRIGHT, this, 0, 0, NONEXISTANT_LOCALE, NULL, true);
 		nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESSDEEPSTANDBY);
 		mn_widget->addItem(nc);
 	}
-	nc = new CMenuOptionNumberChooser(LOCALE_LCDMENU_DIM_BRIGHTNESS, &g_settings.lcd_setting_dim_brightness, vfd_enabled, -1, 15, NULL, 0, -1, LOCALE_OPTIONS_OFF, NULL, true);
+	nc = new CMenuOptionNumberChooser(LOCALE_LCDMENU_DIM_BRIGHTNESS, &g_settings.lcd_setting_dim_brightness, vfd_enabled, -1, MAXBRIGHT, NULL, 0, -1, LOCALE_OPTIONS_OFF, NULL, true);
 	nc->setHint("", LOCALE_MENU_HINT_VFD_BRIGHTNESSDIM);
 	mn_widget->addItem(nc);
 
--- neutrino-mp.org/src/driver/vfd.cpp
+++ neutrino-mp/src/driver/vfd.cpp
@@ -57,6 +57,18 @@
 	#define VFDLENGTH 12
 #elif defined (BOXMODEL_SPARK)
 	#define VFDLENGTH 4
+#elif defined (BOXMODEL_HS7110)
+	#define VFDLENGTH 0
+#elif defined (BOXMODEL_HS7420)
+	#define VFDLENGTH 8
+#elif defined (BOXMODEL_HS7810A)
+	#define VFDLENGTH 4
+#elif defined (BOXMODEL_HS7119)
+	#define VFDLENGTH 4
+#elif defined (BOXMODEL_HS7429)
+	#define VFDLENGTH 8
+#elif defined (BOXMODEL_HS7819)
+	#define VFDLENGTH 4
 #else
 	#define VFDLENGTH 16
 #endif
@@ -114,6 +128,7 @@
 	}
 }
 
+#if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
 static void writeCG (unsigned char adress, unsigned char pixeldata[5])
 {
 	struct vfd_ioctl_data data;
@@ -127,6 +142,7 @@
 	write_to_vfd(VFDWRITECGRAM, &data);
 	return;
 }
+#endif
 
 static void ShowNormalText(char * str, bool fromScrollThread = false)
 {
@@ -196,36 +212,39 @@
 
 	int i;
 	char *str = (char *)arg;
-	int len= strlen(str);
+	int len = strlen(str);
+	int retries = g_settings.lcd_vfd_scroll;
 	char out[VFDLENGTH+1];
-
-	memset(out, 0, VFDLENGTH+1);
-
-	int retries = g_settings.lcd_vfd_scroll;
-
-	while(retries--)
+	char buf[VFDLENGTH+65];
+
+	if (len > VFDLENGTH)
 	{
-		usleep(SCROLL_TIME);
-
-		for (i=0; i<=(len-VFDLENGTH); i++)
+		memset(buf, ' ', (len + VFDLENGTH));
+		memcpy(buf, str, len);
+		memset(out, 0, VFDLENGTH+1);
+
+		while(retries--)
 		{
-			// scroll text till end
-			memset(out, ' ', VFDLENGTH);
-			memcpy(out, str+i, VFDLENGTH);
-			ShowNormalText(out,true);
-			usleep(SCROLL_TIME);
+			usleep(SCROLL_TIME); //wait scroll time
+
+			for (i=0; i<=(len-1); i++)
+			{
+				// scroll text till end
+				memcpy(out, buf+i, VFDLENGTH);
+				ShowNormalText(out,true);
+				usleep(SCROLL_TIME);
+			}
 		}
-
-		memcpy(out, str, VFDLENGTH); // display first VFDLENGTH-1 chars after scrolling
-		ShowNormalText(out,true);
-	}
+	}
+	memcpy(out, str, VFDLENGTH); // display first VFDLENGTH chars after scrolling
+	ShowNormalText(out,true);
 
 	pthread_exit(0);
 
 	return NULL;
 }
 
-#endif
+#endif //HAVE_DUCKBOX_HARDWARE
 
 CVFD::CVFD()
 {
@@ -312,6 +331,9 @@
 	if(g_settings.lcd_info_line){
 		switch_name_time_cnt = g_settings.timing[SNeutrinoSettings::TIMING_INFOBAR] + 10;
 	}
+#if defined (BOXMODEL_OCTAGON1008)
+	ShowIcon(ICON_COLON2, false);
+#endif
 }
 
 void* CVFD::TimeThread(void *)
@@ -371,7 +393,23 @@
 	data.start = setting & 0x07;
 	data.length = 0;
 	write_to_vfd(VFDBRIGHTNESS, &data);
-#if !defined (BOXMODEL_UFS912) && !defined (BOXMODEL_UFS913) && !defined (BOXMODEL_OCTAGON1008)
+#if defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.start = 0;
+	data.data[0] = 0xf2; // cross plus blue led
+	data.data[4] = (setting & 0x07)*4;
+	data.length = 5;
+	write_to_vfd(VFDPWRLED, &data);
+#elif defined (BOXMODEL_HS7420) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7429) || defined (BOXMODEL_HS7819)
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.start = 0;
+	data.data[0] = 0x02; // logo
+	data.data[4] = (setting & 0x07);
+	data.length = 5;
+	write_to_vfd(VFDPWRLED, &data);
+#elif !defined (BOXMODEL_UFS912) \
+   && !defined (BOXMODEL_UFS913) \
+   && !defined (BOXMODEL_OCTAGON1008)
 // Power on/off
 	if (power) {
 		data.start = 0x01;
@@ -529,8 +567,23 @@
 			if(force || ( switch_name_time_cnt == 0 && ((hour != t->tm_hour) || (minute != t->tm_min))) ) {
 				hour = t->tm_hour;
 				minute = t->tm_min;
+#if !defined (BOXMODEL_HS7420) && !defined (BOXMODEL_HS7810A) && !defined (BOXMODEL_HS7119) && !defined (BOXMODEL_HS7429) && !defined (BOXMODEL_HS7819)
+  #if defined (BOXMODEL_OCTAGON1008)
+				ShowIcon(ICON_COLON2, true);
+				strftime(timestr, 5, "%H%M", t);
+  #else
 				strftime(timestr, 20, "%H:%M", t);
+  #endif
 				ShowText(timestr);
+#else
+				strftime(timestr, 6, "%H:%M", t);
+				struct vfd_ioctl_data data;
+				memset(data.data, ' ', 6);
+				memcpy (data.data, timestr, 6);
+				data.start = 0;
+				data.length = 5;
+				write_to_vfd(VFDDISPLAYCHARS, &data);
+#endif
 			}
 		}
 	}
@@ -586,7 +633,11 @@
 void CVFD::showRCLock(int /*duration*/)
 {
 #ifdef HAVE_DUCKBOX_HARDWARE
+#if defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
+	ShowText("Lock");
+#else
 	ShowText("<LOCKED>");
+#endif
 #endif
 }
 
@@ -608,13 +659,13 @@
 	if ((mode == MODE_TVRADIO) && g_settings.lcd_setting[SNeutrinoSettings::LCD_SHOW_VOLUME]) {
 #if HAVE_DUCKBOX_HARDWARE
 		int pp = (int) round((double) vol / (double) 2);
-		int i;
 		if(oldpp != pp)
 		{
 #if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
 			unsigned char speaker[5] = {0x1C, 0x1C, 0x1C, 0x3E, 0x7F}; // speaker symbol
 			writeCG(0, speaker);
 
+			int i;
 			int j = pp / 5;
 			// v-lines 0-5 = {0x10,0x11,0x12,0x13,0x14,0x15}
 			char c0[1] = {0x5F};
@@ -655,11 +706,11 @@
 			ShowText(VolumeBar);
 #elif defined (BOXMODEL_OCTAGON1008)
 			char vol_chr[64] = "";
-			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL: %d%%", (int)vol);
+			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL=%3d", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_SPARK)
+#elif defined (BOXMODEL_SPARK) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819)
 			char vol_chr[64] = "";
-			snprintf(vol_chr, sizeof(vol_chr)-1, "%d", (int)vol);
+			snprintf(vol_chr, sizeof(vol_chr)-1, "v%3d", (int)vol);
 			ShowText(vol_chr);
 #elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_UFS912) || defined (BOXMODEL_UFS913) || defined (BOXMODEL_CUBEREVO) || defined (BOXMODEL_CUBEREVO_MINI2) || defined (BOXMODEL_CUBEREVO_2000HD)
 			char vol_chr[64] = "";
@@ -879,6 +930,9 @@
 		ShowIcon(FP_ICON_COL1, true);
 		ShowIcon(FP_ICON_COL2, true);
 #endif
+		ClearIcons();
+		ShowIcon(FP_ICON_USB, false);
+		ShowIcon(FP_ICON_HDD, false);
 		showclock = true;
 		showTime(true);      /* "showclock = true;" implies that "showTime();" does a "displayUpdate();" */
 		                 /* "showTime()" clears the whole lcd in MODE_STANDBY                         */
@@ -1021,11 +1089,13 @@
 	else
 		text[0] = 0;
 #else
-#if defined (BOXMODEL_OCTAGON1008)
+#if defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
+	ShowText("    ");
+#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_HS7420) || defined (BOXMODEL_HS7429)
 	ShowText("        ");
 #elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
 	ShowText("            ");
-#else
+#elif !defined (BOXMODEL_HS7110)
 	ShowText("                ");
 #endif
 #endif
@@ -1040,13 +1116,20 @@
 	if(ret < 0)
 		perror(show ? "IOC_FP_SET_ICON" : "IOC_FP_CLEAR_ICON");
 #else
-#if defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7110) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_SPARK)
 	return;
 #endif
 	struct vfd_ioctl_data data;
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = 0x00;
-	data.data[0] = icon & 0x0f;
+	data.data[0] = icon;
 	data.data[4] = show;
 	data.length = 5;
 	write_to_vfd(VFDICONDISPLAYONOFF, &data);
@@ -1057,12 +1140,21 @@
 #ifdef HAVE_DUCKBOX_HARDWARE
 void CVFD::ClearIcons()
 {
-#if defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_SPARK)
+#if defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7110) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_SPARK)
 	return;
 #endif
 	for (int id = 0x10; id < FP_ICON_MAX; id++) {
-#if defined (BOXMODEL_OCTAGON1008) || defined(BOXMODEL_FORTIS_HDBOX)
-		if (id != 0x16)
+#if defined (BOXMODEL_OCTAGON1008)
+		if (id != FP_ICON_USB && id != FP_ICON_HDD)
+#elif defined(BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_TF7700)
+		if (id != FP_ICON_USB)
 #else
 		if (id != 0x10 && id != 0x12)
 #endif

