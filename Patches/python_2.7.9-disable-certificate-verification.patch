--- a/Lib/httplib.py	2014-12-10 17:59:36.000000000 +0200
+++ b/Lib/httplib.py	2015-05-04 16:58:48.259621676 +0300
@@ -1193,7 +1193,7 @@
             self.key_file = key_file
             self.cert_file = cert_file
             if context is None:
-                context = ssl._create_default_https_context()
+                context = ssl._create_unverified_context()
             if key_file or cert_file:
                 context.load_cert_chain(cert_file, key_file)
             self._context = context
--- a/Modules/_ctypes/_ctypes.c	2012-01-26 15:41:30.000000000 +0100
+++ b/Modules/_ctypes/_ctypes.c	2012-01-26 15:44:41.046977137 +0100
@@ -602,10 +602,16 @@
 #ifdef __CYGWIN__
 /* dlerror() isn't very helpful on cygwin */
         PyErr_Format(PyExc_ValueError,
-                     "symbol '%s' not found (%s) ",
+                     "symbol '%s' not found",
                      name);
 #else
-        PyErr_SetString(PyExc_ValueError, ctypes_dlerror());
+        const char *err = ctypes_dlerror();
+        if (!err)
+            PyErr_Format(PyExc_ValueError,
+                         "symbol '%s' not found",
+                         name);
+        else
+            PyErr_SetString(PyExc_ValueError, err);
 #endif
         return NULL;
     }
@@ -3290,10 +3296,16 @@
 #ifdef __CYGWIN__
 /* dlerror() isn't very helpful on cygwin */
         PyErr_Format(PyExc_AttributeError,
-                     "function '%s' not found (%s) ",
+                     "function '%s' not found",
                      name);
 #else
-        PyErr_SetString(PyExc_AttributeError, ctypes_dlerror());
+        const char *err = ctypes_dlerror();
+        if (!err)
+            PyErr_Format(PyExc_AttributeError,
+                         "function '%s' not found",
+                         name);
+        else
+            PyErr_SetString(PyExc_AttributeError, err);
 #endif
         return NULL;
     }
--- Python-2.6.7.orig/Lib/ctypes/util.py	2010-03-20 03:11:16.000000000 +0100
+++ Python-2.6.7/Lib/ctypes/util.py	2012-01-12 15:26:37.562726637 +0100
@@ -204,7 +204,16 @@
             return res.group(1)
 
         def find_library(name):
-            return _findSoname_ldconfig(name) or _get_soname(_findLib_gcc(name))
+            from glob import glob
+            paths = ['/lib', '/usr/lib']
+            if os.environ.has_key('LD_LIBRARY_PATH'):
+                paths = os.environ['LD_LIBRARY_PATH'].split(':') + paths
+            for path in paths:
+                for lib in glob("%s/lib%s.so.*" % (path, name)):
+                    rpath = os.path.realpath(lib)
+                    if os.path.isfile(rpath):
+                        return rpath
+            return None
 
 ################################################################
 # test code
