#!/bin/sh
#Version 170410.1

echo "Fortis HS8200 Enigma2"

MODDIR=/lib/modules

insmod $MODDIR/e2_proc.ko

echo "[rcS] Init frontpanel"
insmod $MODDIR/nuvoton.ko

if [ -e /var/etc/.firstboot ]; then
   echo "Wait 1 min." > /dev/vfd
   echo "[rcS] WAIT 1 minute"
   rm /var/etc/.firstboot
   sleep 1
   touch /dev/.devfsd
else
   echo "LOAD 10" > /dev/vfd
   echo "[rcS] LOAD 10"
fi

/etc/init.d/mountvirtfs start

# Start automounter with umount timeout of 5 seconds
/etc/init.d/autofs start

echo "[rcS] Starting DEBUG Interface"
/etc/init.d/mountall start
/etc/init.d/hostname start

#if [ -d /dev/sda1/Recordings ]; then
#   echo "[rcS] Recordings directory found on /dev/sda1, checking..."
#   fsck.jfs -a /dev/sda1
#fi

echo -n "[rcS] Starting telnetd "
autologin=`cat /etc/enigma2/settings | grep systemoptions.autologin | cut -d "=" -f2`
if [ ! $autologin ]; then
   /usr/sbin/telnetd -l /bin/autologin
   echo "with autologin"
else
   /usr/sbin/telnetd -l /bin/login
   echo "with normal login"
fi

echo "[rcS] Init stmfb (LOAD 9)"
echo "LOAD 9" > /dev/vfd
insmod $MODDIR/stmcore-display-sti7105.ko

if grep -q "config.av.videoport=Scart" /etc/enigma2/settings; then
   insmod $MODDIR/stmfb.ko display0=720x576i-32@50:12m:pal:rgb:rgb; #SCART
else
   insmod $MODDIR/stmfb.ko display0=1280x720-32@50:12m:pal:rgb:rgb #HDMI
fi

echo "[rcS] Loading modules"

if [ ! -e /boot/audio.elf ] || [ ! -e /boot/video.elf ]; then
   echo "[rcS] Firmware(s) missing!"
   echo "FW MISSING!" > /dev/vfd
   sleep 5
fi

echo "[rcS] Load audio firmware (LOAD 8)"
echo "LOAD 8" > /dev/vfd
dtsdown=`cat /etc/enigma2/settings | grep systemoptions.dtsdownmix | cut -d "=" -f2`
if [ ! $dtsdown ] && [ -e /boot/audio_dts.elf ]; then
   /bin/ustslave /dev/st231-1 /boot/audio_dts.elf > /dev/null
else
   /bin/ustslave /dev/st231-1 /boot/audio.elf > /dev/null
fi

echo "[rcS] Load video firmware (LOAD 7)"
echo "LOAD 7" > /dev/vfd
/bin/ustslave /dev/st231-0 /boot/video.elf > /dev/null

echo "[rcS] Init embx (LOAD 6)"
echo "LOAD 6" > /dev/vfd
insmod $MODDIR/embxshell.ko
insmod $MODDIR/embxmailbox.ko mailbox0=0xfe211000:136:set2 mailbox1=0xfe212000:0
insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:512:0x40000000:0x10000000
insmod $MODDIR/mme_host.ko transport0=shm

echo "[rcS] Init AVS (LOAD 5)"
echo "LOAD 5" > /dev/vfd
insmod $MODDIR/avs.ko type=stv6412

echo "[rcS] (LOAD 4)"
echo "LOAD 4" > /dev/vfd
insmod $MODDIR/mmelog.ko
insmod $MODDIR/ksound.ko
insmod $MODDIR/p2div64.ko
insmod $MODDIR/stm_v4l2.ko
insmod $MODDIR/pseudocard.ko

echo "[rcS] Init frontends"
insmod $MODDIR/frontend_platform.ko
insmod $MODDIR/socket.ko
insmod $MODDIR/lnbh221.ko
insmod $MODDIR/lnb_pio.ko
# DVB-S
insmod $MODDIR/avl2108.ko
# DVB-C
#insmod $MODDIR/tda10024.ko
# DVB-T
#insmod $MODDIR/cxd2820.ko

echo "[rcS] Init CI & cardreader"
insmod $MODDIR/starci.ko

echo "[rcS] Init pti"
player=`cat /proc/stb/player/version`
if [ $player=='player191' ]; then
   echo "[rcS] Init player2"
elif [ $player=='player179' ]; then
   echo "init player 179"
else
   echo "init player 131"
fi
if [ $player=='player191' ] || [ $player=='player179' ]; then
   # Full feature pti
   insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
   if [ $?=='2' ]; then
      # Simple pti
      insmod $MODDIR/pti.ko
   fi
   insmod $MODDIR/stm_monitor.ko
   insmod $MODDIR/stmsysfs.ko
   insmod $MODDIR/stmdvb.ko
else
   insmod $MODDIR/pti.ko
   insmod $MODDIR/stmdvb.ko
   insmod $MODDIR/stm_monitor.ko
fi

echo "[rcS] Init player2 (LOAD 3)"
echo "LOAD 3" > /dev/vfd
insmod $MODDIR/player2.ko
insmod $MODDIR/sth264pp.ko
insmod $MODDIR/stmalloc.ko
insmod $MODDIR/platform.ko
insmod $MODDIR/silencegen.ko

echo "[rcS] Init HDMI-CEC"
if [ -e $MODDIR/cec.ko ];then
   insmod $MODDIR/cec.ko activemode=1
fi

insmod $MODDIR/bpamem.ko
mknod /dev/bpamem c 153 0

if [ -e /boot/bootlogo.mvi ]; then
   showiframe -p /boot/bootlogo.mvi &
fi
stfbcontrol a 0

if [ -e $MODDIR/exportfs.ko ]; then
   insmod $MODDIR/exportfs.ko
fi
if [ -e $MODDIR/cifs.ko ]; then
   insmod $MODDIR/cifs.ko
fi
if [ -e $MODDIR/ntfs.ko ]; then
   insmod $MODDIR/ntfs.ko
fi
if [ -e $MODDIR/tun.ko ]; then
   insmod $MODDIR/tun.ko
fi
if [ -e $MODDIR/usbserial.ko ]; then
   insmod $MODDIR/usbserial.ko
fi
if [ -e $MODDIR/ftdi.ko ]; then
   insmod $MODDIR/ftdi.ko
fi
if [ -e $MODDIR/pl2303.ko ]; then
   insmod $MODDIR/pl2303.ko
fi
if [ -e $MODDIR/sata.ko ]; then
   insmod $MODDIR/sata.ko
fi

echo "[rcS] Init frontpanel buttons"
insmod $MODDIR/simu_button.ko

echo "[rcS] Init remote control (LOAD 2)"
echo "LOAD 2" > /dev/vfd
mknod /dev/rc c 147 1
/bin/evremote2 10 140 &

stfbcontrol a 255

NFS=`grep -c nfs /proc/cmdline`
if [ "$NFS" -eq "1" ]; then
   echo "[rcS] Booting from nfs, do not set network"
else
   if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=`grep -c 'iface eth0 inet dhcp' /etc/network/interfaces`
      if [ "$DHCP" -eq "1" ]; then
         echo "[rcS] Starting DHCP"
         /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start
   fi
fi
#Allow network to wake up and initialize
sleep 2
#Show IP address on frontpanel
#ip=`ifconfig eth0 | sed -n '/inet addr/s/.*addr.\([^ ]*\) .*/\1/p'`
#echo "IP $ip" > /dev/vfd
#sleep 3

echo -n "[rcS] Init WLAN: "
wlan=`cat /etc/enigma2/settings | grep systemoptions.wlan | cut -d "=" -f2`
if [ ! $wlan ] || [ ! -e $MODDIR/$wlan.ko ]; then
   echo "None."
else
   insmod $MODDIR/$wlan.ko
   echo "[rcS] $wlan WLAN"
#   echo "$wlan WLAN" > /dev/vfd
#   sleep 3
fi

# Handle SWAPPART and RECORD labels and USB devices
if [ -e /usr/sbin/amount.sh ]; then
   (sleep 20; /usr/sbin/amount.sh) &
fi

# inadyn
inadyn=`cat /etc/enigma2/settings | grep systemoptions.inadyn | cut -d "=" -f2`
if [ ! $inadyn ] ||  [ ! -e /usr/bin/inadyn ]; then
   echo "[rcS] No inadyn"
else
   if [ -e /usr/bin/inadyn ]; then
      /usr/bin/inadyn &
   fi
fi

# OpenSSh daemon
openssh=`cat /etc/enigma2/settings | grep systemoptions.openssh | cut -d "=" -f2`
if [ ! $openssh ] || [ ! -e /etc/init.d/sshd ]; then
   echo "[rcS] No OpenSSH"
else
   if [ -e /etc/init.d/sshd ]; then
      (sleep 30; /etc/init.d/sshd start) &
   fi
fi

# Enable PKT plugins
if [ ! -e /tmp/reference.dat ] && [ -e /var/bin/reference.dat ]; then
   cp /var/bin/reference.dat /tmp
fi

# Try and synchronise time
#inettime=`cat /etc/enigma2/settings | grep systemoptions.inettime | cut -d "=" -f2`
# if [ ! $inettime ] && [ -e /sbin/ntpdate ]; then
if [ -e /sbin/ntpdate ]; then
   echo "[rcS] Set internet time"
   (/sbin/ntpdate nl.pool.ntp.org; /bin/fp_control -sst) &
else
   if [ -e /usr/sbin/time.sh ]; then
      echo "[rcS] Use transponder time"
      /usr/sbin/time.sh &
   fi
fi

echo "[rcS] Init portmap & ftp (LOAD 1)"
echo "LOAD 1" > /dev/vfd
/etc/init.d/portmap start
/etc/init.d/vsftpd start
/usr/sbin/inetd

# Do own extras
if [ -e /etc/ownscript.sh ]; then
   /etc/ownscript.sh &
fi

echo "Loading E2" > /dev/vfd
echo "[rcS] Loading E2"

until false
do
   echo "[rcS] Entering e2 main loop"
   if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
      showiframe -p /usr/local/share/enigma2/backdrop.mvi &
   fi
   /usr/local/bin/enigma2
   rtv=$?
   echo "[rcS] e2 ended <- return value: " $rtv
   case "$rtv" in
      0) echo "E2 ERROR"
         echo "E2 Error" > /dev/vfd
         init 6;;
      1) echo "SHUTDOWN"
         echo "Shutdown" > /dev/vfd
         if [ -e /usr/local/share/enigma2/shutdown.mvi ]; then
            showiframe -p /usr/local/share/enigma2/shutdown.mvi &
         fi
         init 0;;
      2) echo "REBOOT"
         echo "Reboot" > /dev/vfd
         init 6;;
      3) echo "E2 RESTART"
         echo "Restart GUI" > /dev/vfd
         echo "0" > /proc/progress
         if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
            showiframe -p /usr/local/share/enigma2/backdrop.mvi &
         else
            showiframe -p /boot/bootlogo.mvi &
         fi
         echo -n " ";;
      *) echo "ERROR"
         echo "Error" > /dev/vfd
         init 6;;
   esac
done

#never reached
echo "REBOOT HS8200" > /dev/vfd
echo "REBOOT HS8200"
reboot -f
